const mongoose = require('mongoose');

async function listAllExams() {
  try {
    await mongoose.connect('mongodb://localhost:27017/biology-question-bank');
    console.log('‚úÖ Êï∞ÊçÆÂ∫ìËøûÊé•ÊàêÂäü');

    const db = mongoose.connection.db;
    
    // ÂàóÂá∫ÊâÄÊúâËÄÉËØï‰ºöËØù
    const examSessions = await db.collection('examsessions').find({}).toArray();
    
    console.log(`üìã ÊâæÂà∞ ${examSessions.length} ‰∏™ËÄÉËØï‰ºöËØù:`);
    examSessions.forEach((exam, index) => {
      console.log(`\n${index + 1}. ËÄÉËØï‰ø°ÊÅØ:`);
      console.log('  ID:', exam._id);
      console.log('  ÂêçÁß∞:', exam.name);
      console.log('  ËØïÂç∑ID:', exam.paperId);
      console.log('  ËÄÉËØïÁ±ªÂûã:', exam.examType);
      console.log('  Áä∂ÊÄÅ:', exam.status);
    });

    // Â¶ÇÊûúÊúâÂåÖÂê´"ÂèëÂ§ßÊ∞¥"ÁöÑËÄÉËØïÔºåËØ¶ÁªÜÊü•Áúã
    const targetExam = examSessions.find(exam => exam.name && exam.name.includes('ÂèëÂ§ßÊ∞¥'));
    if (targetExam) {
      console.log('\nüéØ ÊâæÂà∞ÁõÆÊ†áËÄÉËØï:', targetExam.name);
      console.log('   ËÄÉËØïID:', targetExam._id);
      console.log('   ËØïÂç∑ID:', targetExam.paperId);
      
      // Êü•ÁúãÂØπÂ∫îËØïÂç∑
      const paper = await db.collection('papers').findOne({
        _id: targetExam.paperId
      });
      
      if (paper) {
        console.log('\nüìÑ ÂØπÂ∫îËØïÂç∑‰ø°ÊÅØ:');
        console.log('   ËØïÂç∑ID:', paper._id);
        console.log('   ËØïÂç∑Ê†áÈ¢ò:', paper.title);
        console.log('   È¢òÁõÆÊï∞Èáè:', paper.questions ? paper.questions.length : 0);
        
        if (paper.questions && paper.questions.length > 0) {
          console.log('\nüìù Ââç3‰∏™È¢òÁõÆÁöÑÁªìÊûÑ:');
          paper.questions.slice(0, 3).forEach((q, index) => {
            console.log(`   È¢òÁõÆ ${index + 1}:`, {
              hasQuestionId: !!q.questionId,
              questionId: q.questionId,
              hasContent: !!q.content,
              contentPreview: q.content ? q.content.substring(0, 50) + '...' : 'null',
              type: q.type,
              hasOptions: !!q.options,
              optionsCount: q.options ? q.options.length : 0,
              points: q.points
            });
          });
        }
      }
    }

  } catch (error) {
    console.error('‚ùå Êü•ÊâæÂ§±Ë¥•:', error);
  } finally {
    await mongoose.disconnect();
  }
}

listAllExams();